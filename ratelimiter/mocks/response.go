// Code generated by MockGen. DO NOT EDIT.
// Source: ./ratelimiter/response_writer/response.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRateLimiterResponseWriter is a mock of RateLimiterResponseWriter interface.
type MockRateLimiterResponseWriter struct {
	ctrl     *gomock.Controller
	recorder *MockRateLimiterResponseWriterMockRecorder
}

// MockRateLimiterResponseWriterMockRecorder is the mock recorder for MockRateLimiterResponseWriter.
type MockRateLimiterResponseWriterMockRecorder struct {
	mock *MockRateLimiterResponseWriter
}

// NewMockRateLimiterResponseWriter creates a new mock instance.
func NewMockRateLimiterResponseWriter(ctrl *gomock.Controller) *MockRateLimiterResponseWriter {
	mock := &MockRateLimiterResponseWriter{ctrl: ctrl}
	mock.recorder = &MockRateLimiterResponseWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRateLimiterResponseWriter) EXPECT() *MockRateLimiterResponseWriterMockRecorder {
	return m.recorder
}

// WriteError mocks base method.
func (m *MockRateLimiterResponseWriter) WriteError(w *http.ResponseWriter, err error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteError", w, err)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteError indicates an expected call of WriteError.
func (mr *MockRateLimiterResponseWriterMockRecorder) WriteError(w, err interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteError", reflect.TypeOf((*MockRateLimiterResponseWriter)(nil).WriteError), w, err)
}

// WriteResponse mocks base method.
func (m *MockRateLimiterResponseWriter) WriteResponse(w *http.ResponseWriter) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteResponse", w)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteResponse indicates an expected call of WriteResponse.
func (mr *MockRateLimiterResponseWriterMockRecorder) WriteResponse(w interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteResponse", reflect.TypeOf((*MockRateLimiterResponseWriter)(nil).WriteResponse), w)
}
